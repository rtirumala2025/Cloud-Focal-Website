import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Layers, TrendingUp, Database, Shield, Cloud, Users, 
  Search, Target, Zap, CheckCircle, Code, Smartphone, 
  Cpu, GitBranch, Server, BarChart2, Lightbulb, Settings, 
  ArrowRight, ChevronRight, ExternalLink
} from 'lucide-react';
import Button from '../../components/common/Button/Button';
import servicesData from '../../assets/data/services.json';

// Counter component for statistics with animation
const Counter = ({ value, suffix = '' }) => {
  const [count, setCount] = useState(0);
  const [hasAnimated, setHasAnimated] = useState(false);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting && !hasAnimated) {
          const duration = 2000;
          const stepTime = Math.max(Math.floor(duration / value), 1);
          
          const timer = setInterval(() => {
            setCount(prevCount => {
              const newCount = Math.min(prevCount + Math.ceil(value / 20), value);
              if (newCount >= value) {
                clearInterval(timer);
                setHasAnimated(true);
              }
              return newCount;
            });
          }, stepTime);

          return () => clearInterval(timer);
        }
      },
      { threshold: 0.2 }
    );

    const counterElement = document.getElementById(`counter-${value}`);
    if (counterElement) observer.observe(counterElement);

    return () => {
      if (counterElement) observer.unobserve(counterElement);
    };
  }, [value, hasAnimated]);

  return <span id={`counter-${value}`}>{count}{suffix}</span>;
};

// Service offerings data
const serviceOfferings = [
  {
    id: 1,
    title: 'Custom Web Apps',
    description: 'Tailored web applications built with modern frameworks for optimal performance and scalability.',
    icon: <Code className="w-8 h-8 text-primary-600" />
  },
  {
    id: 2,
    title: 'Mobile Development',
    description: 'Cross-platform mobile apps that deliver seamless experiences on all devices.',
    icon: <Smartphone className="w-8 h-8 text-primary-600" />
  },
  {
    id: 3,
    title: 'Cloud Migration',
    description: 'Seamless transition to cloud infrastructure with zero downtime and maximum efficiency.',
    icon: <Cloud className="w-8 h-8 text-primary-600" />
  },
  {
    id: 4,
    title: 'API Development',
    description: 'Robust and secure APIs that power your digital ecosystem and enable seamless integrations.',
    icon: <GitBranch className="w-8 h-8 text-primary-600" />
  },
  {
    id: 5,
    title: 'Legacy Modernization',
    description: 'Transform outdated systems into modern, efficient, and maintainable solutions.',
    icon: <Cpu className="w-8 h-8 text-primary-600" />
  },
  {
    id: 6,
    title: 'Microservices',
    description: 'Scalable and maintainable architectures using microservices for complex applications.',
    icon: <Server className="w-8 h-8 text-primary-600" />
  }
];

const Services = () => {
  const [activeCategory, setActiveCategory] = useState('apps');
  const [isVisible, setIsVisible] = useState(false);
  
  const stats = [
    { 
      id: 1, 
      value: 250, 
      suffix: '+', 
      label: 'Client Satisfaction', 
      icon: <CheckCircle className="w-10 h-10 text-primary-600" /> 
    },
    { 
      id: 2, 
      value: 500, 
      suffix: '+', 
      label: 'Projects Completed', 
      icon: <Target className="w-10 h-10 text-primary-600" /> 
    },
    { 
      id: 3, 
      value: 15, 
      suffix: '+', 
      label: 'Years Experience', 
      icon: <Zap className="w-10 h-10 text-primary-600" /> 
    },
    { 
      id: 4, 
      value: 50, 
      suffix: '+', 
      label: 'Technology Experts', 
      icon: <Users className="w-10 h-10 text-primary-600" /> 
    }
  ];

  const processSteps = [
    {
      id: 1,
      title: 'Discovery',
      description: 'We analyze your business needs and technical requirements to create a tailored solution.',
      icon: <Search className="w-6 h-6" />
    },
    {
      id: 2,
      title: 'Strategy',
      description: 'Our experts develop a comprehensive strategy to achieve your business objectives.',
      icon: <Lightbulb className="w-6 h-6" />
    },
    {
      id: 3,
      title: 'Implementation',
      description: 'We execute the plan with precision, keeping you informed at every step.',
      icon: <Settings className="w-6 h-6" />
    },
    {
      id: 4,
      title: 'Optimization',
      description: 'Continuous monitoring and improvement to ensure optimal performance.',
      icon: <BarChart2 className="w-6 h-6" />
    }
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.5 }
    }
  };
  
  const filteredServices = servicesData.services.filter(
    service => service.category.toLowerCase() === activeCategory
  );
  
  const getCategoryById = (id) => {
    return servicesData.categories.find(cat => cat.id === id) || {};
  };
  
  const activeCategoryData = getCategoryById(activeCategory);

  return (
    <>
      <Helmet>
        <title>Services - Technology Staffing, IT Consulting & System Integration | Cloud Focal</title>
        <meta name="description" content="Comprehensive technology solutions including staffing, IT consulting, and system integration. Transform your business with Cloud Focal's expertise." />
        <meta name="keywords" content="technology staffing, IT consulting, system integration, digital transformation, tech solutions" />
      </Helmet>

      <motion.div 
        initial="hidden"
        animate="visible"
        variants={containerVariants}
        className="page-content-with-footer"
      >
        {/* Hero Section */}
        <section className="pt-32 pb-20 bg-white text-gray-900">
          <div className="container mx-auto px-4">
            <motion.div 
              variants={itemVariants}
              className="text-center max-w-4xl mx-auto"
            >
              <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">Our Services</h1>
              <p className="text-lg text-gray-700 mb-8">
                Comprehensive technology solutions designed to accelerate your digital transformation and drive sustainable growth.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button 
                  to="/contact" 
                  variant="outline" 
                  size="large"
                  className="group !rounded-lg border-2 border-black text-black hover:bg-black hover:text-white transition-all duration-300 flex items-center"
                >
                  Get in Touch
                  <ArrowRight className="ml-2 w-5 h-5 transition-transform group-hover:translate-x-1" />
                </Button>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Category Navigation */}
        <section className="py-8 bg-gray-50">
          <div className="container mx-auto px-4">
            <motion.div
              variants={itemVariants}
              className="flex flex-wrap justify-center gap-3 mb-4"
            >
              {servicesData.categories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => setActiveCategory(category.id)}
                  className={`px-5 py-2.5 rounded-full font-medium transition-all duration-300 ${
                    activeCategory === category.id
                      ? 'bg-black text-white shadow-md transform -translate-y-0.5'
                      : 'bg-white text-gray-700 border border-gray-200 hover:bg-gray-100 hover:border-gray-300'
                  }`}
                >
                  {category.title}
                </button>
              ))}
            </motion.div>
            <motion.p 
              variants={itemVariants}
              className="text-center text-gray-600 text-sm"
            >
              {activeCategoryData.description}
            </motion.p>
          </div>
        </section>

        {/* Service Offerings Grid */}
        <section className="py-16 bg-white">
          <div className="container mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
              className="mb-12 text-center"
            >
              <h2 className="text-3xl font-bold text-gray-900 mb-4">Our Service Offerings</h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                Comprehensive solutions tailored to meet your unique business needs and challenges.
              </p>
            </motion.div>

            <motion.div 
              variants={containerVariants}
              className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
            >
              {serviceOfferings.map((service) => (
                <motion.div
                  key={service.id}
                  variants={itemVariants}
                  whileHover={{ y: -5 }}
                  className="group bg-white p-6 rounded-xl shadow-sm border border-gray-100 hover:shadow-lg transition-all duration-300"
                >
                  <div className="w-12 h-12 bg-primary-50 rounded-lg flex items-center justify-center mb-4 group-hover:bg-primary-100 transition-colors duration-300">
                    {service.icon}
                  </div>
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{service.title}</h3>
                  <p className="text-gray-600 mb-4">{service.description}</p>
                  <button className="text-primary-600 hover:text-primary-700 font-medium flex items-center transition-colors">
                    Learn more <ChevronRight className="w-4 h-4 ml-1" />
                  </button>
                </motion.div>
              ))}
            </motion.div>
          </div>
        </section>

        {/* Statistics Section */}
        <section className="py-16 bg-gray-50">
          <div className="container mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
              className="text-center mb-12"
            >
              <h2 className="text-3xl font-bold text-gray-900 mb-4">Our Impact in Numbers</h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                Delivering exceptional results through innovative technology solutions and expert consulting.
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
              {stats.map((stat) => (
                <motion.div
                  key={stat.id}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: stat.id * 0.1 }}
                  whileHover={{ y: -5 }}
                  className="bg-white p-8 rounded-xl shadow-sm border border-gray-100 hover:shadow-lg transition-all duration-300"
                >
                  <div className="flex items-center justify-center w-16 h-16 rounded-full bg-primary-50 mb-4 mx-auto">
                    {stat.icon}
                  </div>
                  <div className="text-center">
                    <div className="text-4xl font-bold text-gray-900 mb-2">
                      <Counter value={stat.value} suffix={stat.suffix} />
                    </div>
                    <p className="text-gray-600 font-medium">{stat.label}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Process Section */}
        <section className="py-16 bg-white relative">
          <div className="container mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
              className="text-center mb-12"
            >
              <h2 className="text-3xl font-bold text-gray-900 mb-4">Our Process</h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                A proven methodology to ensure your success at every stage of the project.
              </p>
            </motion.div>

            <div className="relative">
              {/* Connecting line */}
              <div className="hidden lg:block absolute left-0 right-0 top-16 h-0.5 bg-gradient-to-r from-transparent via-gray-200 to-transparent"></div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 relative z-10">
                {processSteps.map((step, index) => (
                  <motion.div
                    key={step.id}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.5, delay: index * 0.1 }}
                    whileHover={{ y: -5 }}
                    className="bg-white p-6 rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-all duration-300 group"
                  >
                    <div className="flex flex-col items-center text-center">
                      <div className="w-16 h-16 rounded-full bg-primary-600 flex items-center justify-center text-white text-xl font-bold mb-4 relative">
                        {step.icon}
                        <span className="absolute -bottom-1 -right-1 w-6 h-6 bg-white border-2 border-primary-600 rounded-full flex items-center justify-center text-primary-600 text-xs font-bold">
                          {step.id}
                        </span>
                      </div>
                      <h3 className="text-xl font-semibold text-gray-900 mb-3">{step.title}</h3>
                      <p className="text-gray-600">{step.description}</p>
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-16 bg-gradient-to-r from-primary-700 to-primary-600 text-white">
          <div className="container mx-auto px-4 text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
            >
              <h2 className="text-3xl font-bold mb-6">Ready to Transform Your Business?</h2>
              <p className="text-xl mb-8 max-w-2xl mx-auto text-primary-100">
                Let's discuss how our technology solutions can drive your business forward.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button 
                  to="/contact" 
                  variant="white" 
                  size="large"
                  className="group !rounded-lg bg-white text-primary-700 hover:bg-gray-100 px-8 transition-all duration-300 flex items-center"
                >
                  Get in Touch
                  <ArrowRight className="ml-2 w-5 h-5 transition-transform group-hover:translate-x-1" />
                </Button>
                <Button 
                  to="/solutions" 
                  variant="outline" 
                  size="large"
                  className="group !rounded-lg border-2 border-white text-white hover:bg-white/10 px-8 transition-all duration-300 flex items-center"
                >
                  Explore Solutions
                  <ExternalLink className="ml-2 w-4 h-4" />
                </Button>
              </div>
            </motion.div>
          </div>
        </section>
      </motion.div>
    </>
  );
};

// Helper component for service icons
const ServiceIcon = ({ icon }) => {
  const icons = {
    layers: <Layers className="w-6 h-6 text-primary-600" />,
    'trending-up': <TrendingUp className="w-6 h-6 text-primary-600" />,
    database: <Database className="w-6 h-6 text-primary-600" />,
    shield: <Shield className="w-6 h-6 text-primary-600" />,
    cloud: <Cloud className="w-6 h-6 text-primary-600" />,
    users: <Users className="w-6 h-6 text-primary-600" />,
  };

  return icons[icon] || <Layers className="w-6 h-6 text-primary-600" />;
};

export default Services;
